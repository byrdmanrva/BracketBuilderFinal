{"ast":null,"code":"import _defineProperty from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/src/views/pages/login.js\";\n// import external modules\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Row, Col, Input, Form, FormGroup, Button, Label, Card, CardBody, CardFooter } from \"reactstrap\"; // signUpUser = event => {\n//    event.preventDefault();\n//    alert(`Hello ${this.state.firstName} ${this.state.lastName}`);\n//    userData.setState({\n//      firstName: \"\",\n//      lastName: \"\",\n//      beltLevel: \"\", \n//      weightClass: \"\",\n//      password: \"\",\n//      email: \"\"\n//    });\n// }\n// if (!userData.email || !userData.password) {\n//   return;\n// }\n// If we have an email and password, run the signUpUser function\n// signUpUser(userData.firstName, userData.lastName, userData.beltLevel, userData,weightClass, userData.email, userData.password);\n// emailInput.val(\"\");\n// passwordInput.val(\"\");\n// Does a post to the signup route. If successful, we are redirected to the members page\n// Otherwise we log any errors\n// fuction handleLoginErr(err) {\n// alert(err.responseJSON);\n// };\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  // state = {\n  //    isChecked: true\n  // };\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _this.handleLoginErr = function (err) {\n      alert(err.responseJSON);\n    };\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleChecked = function (e) {\n      _this.setState(function (prevState) {\n        return {\n          isChecked: !prevState.isChecked\n        };\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          beltLevel = _this$state.beltLevel,\n          weightClass = _this$state.weightClass,\n          email = _this$state.email,\n          password = _this$state.password;\n      console.log(_this.state);\n      axios.post('/api/auth/login', {\n        firstName: firstName,\n        lastName: lastName,\n        beltLevel: beltLevel,\n        weightClass: weightClass,\n        email: email,\n        password: password\n      }).then(function (result) {\n        localStorage.setItem('jwtToken', result.data.token);\n\n        _this.setState({\n          message: ''\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        if (error.response.status === 401) {\n          _this.setState({\n            message: 'Login failed. Username or password not match'\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      beltLevel: \"\",\n      weightClass: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          beltLevel = _this$state2.beltLevel,\n          weightClass = _this$state2.weightClass,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Tired of paying good money for tournaments, only to have your bracket empty, or with very few competitors? Use Bracket Builder to help find other women in the same weight and belt bracket to coordinate attendance and get the most out of tournaments. Nothing is more disappointing than training hard for months, and making weight, only to be stood up day of competition. \"));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/davidbyrd/U of R/Project-3/demo/BracketBuilderFinal/client/src/views/pages/login.js"],"names":["React","Component","NavLink","axios","Row","Col","Input","Form","FormGroup","Button","Label","Card","CardBody","CardFooter","Register","handleLoginErr","err","alert","responseJSON","onChange","e","preventDefault","setState","target","name","value","handleChecked","prevState","isChecked","onSubmit","state","firstName","lastName","beltLevel","weightClass","email","password","console","log","post","then","result","localStorage","setItem","data","token","message","props","history","push","catch","error","response","status"],"mappings":"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","sourcesContent":["// import external modules\r\nimport React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {\r\n   Row,\r\n   Col,\r\n   Input,\r\n   Form,\r\n   FormGroup,\r\n   Button,\r\n   Label,\r\n   Card,   \r\n   CardBody,\r\n   CardFooter\r\n} from \"reactstrap\";\r\n\r\n// signUpUser = event => {\r\n//    event.preventDefault();\r\n//    alert(`Hello ${this.state.firstName} ${this.state.lastName}`);\r\n//    userData.setState({\r\n//      firstName: \"\",\r\n//      lastName: \"\",\r\n//      beltLevel: \"\", \r\n//      weightClass: \"\",\r\n//      password: \"\",\r\n//      email: \"\"\r\n//    });\r\n// }\r\n\r\n// if (!userData.email || !userData.password) {\r\n//   return;\r\n// }\r\n\r\n// If we have an email and password, run the signUpUser function\r\n// signUpUser(userData.firstName, userData.lastName, userData.beltLevel, userData,weightClass, userData.email, userData.password);\r\n// emailInput.val(\"\");\r\n// passwordInput.val(\"\");\r\n\r\n\r\n// Does a post to the signup route. If successful, we are redirected to the members page\r\n// Otherwise we log any errors\r\n\r\n\r\n// fuction handleLoginErr(err) {\r\n// alert(err.responseJSON);\r\n// };\r\n\r\n\r\n\r\nclass Register extends Component {\r\n   // state = {\r\n   //    isChecked: true\r\n   // };\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        beltLevel: \"\",\r\n        weightClass: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n      };\r\n    }\r\n\r\n    handleLoginErr = (err) => {\r\n      alert(err.responseJSON);\r\n   };\r\n\r\n   //  signUpUser = (firstName, lastName, beltLevel, weightClass, email, password, e) => {\r\n   //    e.preventDefault()\r\n   //    axios.post(\"/api/signup\", {\r\n   //      firstName: firstName,\r\n   //      lastName: lastName,\r\n   //      beltLevel: beltLevel,\r\n   //      weightClass: weightClass,\r\n   //      email: email,\r\n   //      password: password\r\n   //    }).then(function(data) {\r\n   //      window.location.replace(data);\r\n   //      // If there's an error, handle it by throwing up a bootstrap alert\r\n   //    })\r\n   // }\r\n\r\n \r\n    \r\n    onChange = (e) => {\r\n      e.preventDefault();\r\n\r\n      this.setState({ [e.target.name]: e.target.value });\r\n  \r\n    }\r\n\r\n   handleChecked = e => {\r\n      this.setState(prevState => ({\r\n         isChecked: !prevState.isChecked\r\n      }));\r\n   };\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      const { firstName, lastName, beltLevel, weightClass, email, password } = this.state;\r\n      console.log(this.state)\r\n  \r\n      axios.post('/api/auth/login', { firstName, lastName, beltLevel, weightClass, email, password })\r\n        .then((result) => {\r\n          localStorage.setItem('jwtToken', result.data.token);\r\n          this.setState({ message: '' });\r\n          this.props.history.push('/')\r\n        })\r\n        .catch((error) => {\r\n          if(error.response.status === 401) {\r\n            this.setState({ message: 'Login failed. Username or password not match' });\r\n          }\r\n         });\r\n      }\r\n\r\n   render() {\r\n      const { firstName, lastName, beltLevel, weightClass, email, password } = this.state;\r\n      return (\r\n         <div className=\"container\">\r\n                   <span> \r\nTired of paying good money for tournaments, only to have your bracket empty, or with very few competitors? \r\nUse Bracket Builder to help find other women in the same weight and belt bracket to coordinate attendance and get the most out of tournaments. \r\nNothing is more disappointing than training hard for months, and making weight, only to be stood up day of competition. </span> \r\n            {/* <Row className=\"full-height-vh\">\r\n               <Col xs=\"12\" className=\"d-flex align-items-center justify-content-center\">\r\n                  <Card className=\"gradient-indigo-purple text-center width-400\">\r\n                     <CardBody>\r\n                        <h2 className=\"white py-4\">Register</h2>\r\n                        <Form className=\"pt-2\">\r\n                           <FormGroup>\r\n                              <Col md=\"12\">\r\n                                 <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={firstName}\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"First Name\"\r\n                                    onChange={this.onChange}\r\n                                    required\r\n                                 />\r\n                              </Col>\r\n                           </FormGroup>\r\n                           <FormGroup>\r\n                           <Col md=\"12\">\r\n                                 <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"lastName\"\r\n                                    value={lastName}\r\n                                    onChange={this.onChange}\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"Last Name\"\r\n                                    required\r\n                               />\r\n                              </Col>\r\n                           </FormGroup>\r\n                           <FormGroup>\r\n                              <Col md=\"12\">\r\n                                          <Input type=\"select\" id=\"beltLevel\" name=\"beltLevel\" className=\"form-control\" value={beltLevel} onChange={this.onChange} >\r\n                                             <option value=\"none\" defaultValue=\"\" disabled=\"\">Belt Level</option>\r\n                                             <option value=\"White\">White</option>\r\n                                             <option value=\"Blue\">Blue</option>\r\n                                             <option value=\"Purple\">Purple</option>\r\n                                             <option value=\"Brown\">Brown</option>\r\n                                             <option value=\"Black\">Black</option>\r\n                                          </Input>\r\n                                          </Col>\r\n                                       </FormGroup>\r\n                                       <FormGroup>\r\n                                       <Col md=\"12\">\r\n                                          <Input type=\"select\" id=\"weightClass\" name=\"weightClass\" className=\"form-control\" value={beltLevel} onChange={this.onChange}>\r\n                                             <option value=\"none\" defaultValue=\"\" disabled=\"\">Weight Class</option>\r\n                                             <option value=\"Light Feather\">Light Feather – 53.5 kg (118 lbs)</option>\r\n                                             <option value=\"Feather\">Feather – 58.5 kg (129 lbs)</option>\r\n                                             <option value=\"Light\">Light – 64 kg (141 lbs)</option>\r\n                                             <option value=\"Middle\">Middle – 69 kg (152 lbs)</option>\r\n                                             <option value=\"Medium Heavy\">Medium Heavy – 74 kg (163 lbs)</option>\r\n                                             <option value=\"video\">Heavy – No Maximum Weight</option>\r\n                                          </Input>\r\n                                          </Col>\r\n                                       </FormGroup>\r\n                           <FormGroup>\r\n                              <Col md=\"12\">\r\n                                 <Input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    id=\"inputEmail\"\r\n                                    placeholder=\"Email\"\r\n                                    value={email} \r\n                                    onChange={this.onChange}\r\n                                    required\r\n                                 />\r\n                              </Col>\r\n                           </FormGroup>\r\n\r\n                           <FormGroup>\r\n                              <Col md=\"12\">\r\n                                 <Input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    id=\"inputPass\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password} \r\n                                    onChange={this.onChange}\r\n                                    required\r\n                                 />\r\n                              </Col>\r\n                           </FormGroup>\r\n\r\n                           <FormGroup>\r\n                              <Row>\r\n                                 <Col md=\"12\">\r\n                                    <div className=\"custom-control custom-checkbox mb-2 mr-sm-2 mb-sm-0 ml-3\">\r\n                                       <Input\r\n                                          type=\"checkbox\"\r\n                                          className=\"custom-control-input\"\r\n                                          checked={this.state.isChecked}\r\n                                          onChange={this.handleChecked}\r\n                                          id=\"rememberme\"\r\n                                       />\r\n                                       <Label className=\"custom-control-label float-left white\" for=\"rememberme\">\r\n                                          I agree terms and conditions.\r\n                                       </Label>\r\n                                    </div>\r\n                                 </Col>\r\n                              </Row>\r\n                           </FormGroup>\r\n                           <FormGroup>\r\n                              <Col md=\"12\">\r\n                                 <Button type=\"submit\" color=\"purple\" block className=\"btn-pink btn-raised\" onClick={this.onSubmit}>\r\n                                    Submit\r\n                                 </Button>\r\n                                 <Button type=\"button\" color=\"secondary\" block className=\"btn-raised\">\r\n                                    Cancel\r\n                                 </Button>\r\n                              </Col>\r\n                           </FormGroup>\r\n                        </Form>\r\n                     </CardBody>\r\n                     <CardFooter>\r\n                        <div className=\"float-left\">\r\n                           <NavLink to=\"/pages/forgot-password\" className=\"text-white\">\r\n                              Forgot Password?\r\n                           </NavLink>\r\n                        </div>\r\n                        <div className=\"float-right\">\r\n                           <NavLink to=\"/pages/login\" className=\"text-white\">\r\n                              Login\r\n                           </NavLink>\r\n                        </div>\r\n                     </CardFooter>\r\n                  </Card>\r\n               </Col>\r\n            </Row> */}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}